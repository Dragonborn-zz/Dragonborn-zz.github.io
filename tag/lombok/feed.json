{
    "version": "https://jsonfeed.org/version/1",
    "title": "Dragonborn-zz's个人博客 • All posts by \"lombok\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/18/java/lombok%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/2024/02/18/java/lombok%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "lombok的使用",
            "date_published": "2024-02-18T03:28:48.555Z",
            "content_html": "<h2 id=\"1-引入\"><a class=\"markdownIt-Anchor\" href=\"#1-引入\">#</a> 1. 引入</h2>\n<p>java 项目引入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.18.24<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- Spring Boot 项目此部分可以不写 --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>Android 项目引入</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><span class=\"hljs-keyword\">implementation</span> <span class=\"hljs-string\">&quot;org.projectlombok:lombok:1.18.24&quot;</span><br>annotationProcessor <span class=\"hljs-string\">&quot;org.projectlombok:lombok:1.18.24&quot;</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"2-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#2-配置文件\">#</a> 2. 配置文件</h2>\n<p>lombok 的配置文件名为 lombok.config, 生效的作用域为其所在的目录和其子目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lombok.config\">#指明lombok的根目录为当前配置文件所在目录<br>config.stopBubbling=true<br># 解决子类对象属性值一致，但其继承的父类对象属性值不一致，在比较的时候会出现比较结果不对的情况<br>lombok.equalsAndHashCode.callSuper=call<br># 使子类的toString方法包括其继承的父类对象属性值<br>lombok.toString.callSuper = call<br>#生成的set方法返回由null改为this,可以链式调用<br>#lombok.accessors.chain=true<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-注解\"><a class=\"markdownIt-Anchor\" href=\"#3-注解\">#</a> 3. 注解</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">注解</th>\n<th style=\"text-align:right\">使用位置</th>\n<th style=\"text-align:center\">使用效果</th>\n<th style=\"text-align:center\">注解属性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">@Data</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">为类的字段生成 get,set 方法，重写类的 equals,toString 和 hashCode 方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Value</td>\n<td style=\"text-align:right\">字段，类</td>\n<td style=\"text-align:center\">效果相当于 java17 的 record 类</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Getter</td>\n<td style=\"text-align:right\">字段，类</td>\n<td style=\"text-align:center\">为类的字段生成 get 方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Setter</td>\n<td style=\"text-align:right\">字段，类</td>\n<td style=\"text-align:center\">为类的字段生成 set 方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@EqualsAndHashCode</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">重写类的 equals 和 hashCode 方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@ToString</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">重写类的 toString 方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@AllArgsConstructor</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">为类全参构造函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@NoArgsConstructor</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">为类生成无参构造函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@RequiredArgsConstructor</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">为类生成有参构造函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Builder</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">自动生成构造者模式代码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@val</td>\n<td style=\"text-align:right\">常量声明</td>\n<td style=\"text-align:center\">根据赋值推断出常量类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@var</td>\n<td style=\"text-align:right\">变量声明</td>\n<td style=\"text-align:center\">根据赋值推断出常量类型 (等效 java11 的 var 关键字)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@With</td>\n<td style=\"text-align:right\">字段，类</td>\n<td style=\"text-align:center\">作用于类、变量，生成 with + 变量名的方法，返回当前对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@CustomLog</td>\n<td style=\"text-align:right\">类</td>\n<td style=\"text-align:center\">自定义日志类，生成 log 对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@NonNull</td>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\">作用于成员变量和参数中，标识不能为空，否则抛出空指针异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Generated</td>\n<td style=\"text-align:right\"></td>\n<td style=\"text-align:center\">用于标记类、变量、方法是自动生成的，没什么大用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Cleanup</td>\n<td style=\"text-align:right\">变量</td>\n<td style=\"text-align:center\">自动关闭资源，针对实现了 java.io.Closeable 接口的对象有效</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Synchronized</td>\n<td style=\"text-align:right\">方法</td>\n<td style=\"text-align:center\">作用于方法，可以替换 synchronized 关键字或 lock 锁</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@SneakyThrows</td>\n<td style=\"text-align:right\">方法</td>\n<td style=\"text-align:center\">作用于方法，对异常进行捕捉并抛出</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@Singular</td>\n<td style=\"text-align:right\">集合字段</td>\n<td style=\"text-align:center\">作用于集合字段，需要配合 @Builder 使用，加入了 @Singular 注解后，lombok 为我们添加了一个为集合添加元素的方法</td>\n</tr>\n</tbody>\n</table>\n<p>@CommonsLog，@Log，@JBossLog，@Log4j，@Log4j2，@Slf4j，@XSlf4j：日志注解，作用于类</p>\n<h2 id=\"4-实验性注解的使用\"><a class=\"markdownIt-Anchor\" href=\"#4-实验性注解的使用\">#</a> 4. 实验性注解的使用</h2>\n<p>@Accessors：类似于 @Builder 支持链式调用，需要配合 @Setter、@Getter 等注解使用，作用于类、变量<br>\n @Delegate：作用于容器变量，为该变量生成一堆常用的方法，这些方法都是容器中的方法<br>\n @ExtensionMethod：作用于类，向类添加方法，无需创建新的子类<br>\n @FieldDefaults：作用于类，定义变量的访问修饰符以及是否加 final<br>\n@FieldNameConstants：作用于类，生成一个包含所有成员变量的内部类或者内部枚举，内部类中每个字段值即为字段名并且值不可变<br>\n @Helper：作用于方法内部类，使内部类中的方法暴露在外面可以被直接调用，不建议使用<br>\n @NonFinal：作用于类、变量，表示变量不加 final<br>\n@PackagePrivate：作用于类和变量，相当于访问修饰符的 default，没什么用<br>\n @SuperBuilder：支持对于基类成员变量赋值，算是 @Builder 的升级版<br>\n @Tolerate：实现对冲突的兼容，作用于方法上，没什么大用，可以配合 @Builder 使用<br>\n @UtilityClass：作用于类，将类标记为 final，并且类、内部类中的方法、字段都标记为 static<br>\n@WithBy3<br>\n 六、基于 v1.18.22 版本的实验性注解<br>\n @StandardException：自定义异常类</p>\n",
            "tags": [
                "lombok",
                "java"
            ]
        },
        {
            "id": "http://example.com/2023/04/30/maven%E9%A1%B9%E7%9B%AE%E8%A7%A3%E5%86%B3lombok%E4%B8%8Emanifold%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2023/04/30/maven%E9%A1%B9%E7%9B%AE%E8%A7%A3%E5%86%B3lombok%E4%B8%8Emanifold%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/",
            "title": "maven项目解决lombok与manifold兼容问题",
            "date_published": "2023-04-30T22:35:51.000Z",
            "content_html": "<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source</span>&gt;</span>17<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">source</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span>&gt;</span>17<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">target</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">encoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">encoding</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">compilerArgs</span>&gt;</span><br>            <span class=\"hljs-comment\">&lt;!-- Configure manifold plugin--&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">arg</span>&gt;</span>-Xplugin:Manifold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">arg</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">compilerArgs</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- Add the processor path for the plugin --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">annotationProcessorPaths</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>systems.manifold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>manifold-ext<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2023.1.3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">path</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.18.24<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">path</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok-mapstruct-binding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>0.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">path</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">annotationProcessorPaths</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "maven",
                "lombok",
                "manifold"
            ]
        }
    ]
}