<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Dragonborn-zz&#39;s个人博客 • Posts by &#34;工具&#34; category</title>
    <link href="http://example.com" />
    <updated>2024-02-06T09:40:01.000Z</updated>
    <category term="docker" />
    <category term="gitlab" />
    <category term="maven" />
    <category term="lombok" />
    <category term="manifold" />
    <category term="nginx" />
    <category term="android" />
    <category term="gson" />
    <category term="bug" />
    <category term="java" />
    <category term="mybatis" />
    <category term="TypeHandler" />
    <category term="PageHelper" />
    <category term="git" />
    <category term="vim" />
    <entry>
        <id>http://example.com/2024/02/06/%E5%B7%A5%E5%85%B7/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
        <title>vim常用命令</title>
        <link rel="alternate" href="http://example.com/2024/02/06/%E5%B7%A5%E5%85%B7/vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
        <content type="html">&lt;h2 id=&#34;vim-键盘图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vim-键盘图&#34;&gt;#&lt;/a&gt; vim 键盘图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;vivim-的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vivim-的使用&#34;&gt;#&lt;/a&gt; vi/vim 的使用&lt;/h2&gt;
&lt;p&gt;基本上 vi/vim 共分为三种模式，&lt;strong&gt;命令模式（Command Mode）、输入模式（Insert Mode）和命令行模式（Command-Line Mode）&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;命令模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令模式&#34;&gt;#&lt;/a&gt; 命令模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;用户刚刚启动 vi/vim，便进入了命令模式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。&lt;/p&gt;
&lt;p&gt;以下是普通模式常用的几个命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;i – 切换到输入模式，在光标当前位置开始输入文本。&lt;/li&gt;
&lt;li&gt;x – 删除当前光标所在处的字符。&lt;/li&gt;
&lt;li&gt;: – 切换到底线命令模式，以在最底一行输入命令。&lt;/li&gt;
&lt;li&gt;a – 进入插入模式，在光标下一个位置开始输入文本。&lt;/li&gt;
&lt;li&gt;o：在当前行的下方插入一个新行，并进入插入模式。&lt;/li&gt;
&lt;li&gt;O – 在当前行的上方插入一个新行，并进入插入模式。&lt;/li&gt;
&lt;li&gt;dd – 删除当前行。&lt;/li&gt;
&lt;li&gt;yy – 复制当前行。&lt;/li&gt;
&lt;li&gt;p – 粘贴剪贴板内容到光标下方。&lt;/li&gt;
&lt;li&gt;P – 粘贴剪贴板内容到光标上方。&lt;/li&gt;
&lt;li&gt;u – 撤销上一次操作。&lt;/li&gt;
&lt;li&gt;Ctrl + r – 重做上一次撤销的操作。&lt;/li&gt;
&lt;li&gt;:w – 保存文件。&lt;/li&gt;
&lt;li&gt;:q – 退出 Vim 编辑器。&lt;/li&gt;
&lt;li&gt;:q! – 强制退出 Vim 编辑器，不保存修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若想要编辑文本，只需要启动 Vim，进入了命令模式，按下 i 切换到输入模式即可。&lt;/p&gt;
&lt;p&gt;命令模式只有一些最基本的命令，因此仍要依靠&lt;strong&gt;底线命令行模式&lt;/strong&gt;输入更多命令。&lt;/p&gt;
&lt;h3 id=&#34;输入模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#输入模式&#34;&gt;#&lt;/a&gt; 输入模式&lt;/h3&gt;
&lt;p&gt;在命令模式下按下 i 就进入了输入模式，使用 Esc 键可以返回到普通模式。&lt;/p&gt;
&lt;p&gt;在输入模式中，可以使用以下按键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符按键以及 Shift 组合&lt;/strong&gt;，输入字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ENTER&lt;/strong&gt;，回车键，换行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BACK SPACE&lt;/strong&gt;，退格键，删除光标前一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DEL&lt;/strong&gt;，删除键，删除光标后一个字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方向键&lt;/strong&gt;，在文本中移动光标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HOME&lt;/strong&gt;/&lt;strong&gt;END&lt;/strong&gt;，移动光标到行首 / 行尾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Page Up&lt;/strong&gt;/&lt;strong&gt;Page Down&lt;/strong&gt;，上 / 下翻页&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insert&lt;/strong&gt;，切换光标为输入 / 替换模式，光标将变成竖线 / 下划线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ESC&lt;/strong&gt;，退出输入模式，切换到命令模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;底线命令模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#底线命令模式&#34;&gt;#&lt;/a&gt; 底线命令模式&lt;/h3&gt;
&lt;p&gt;在命令模式下按下 :（英文冒号）就进入了底线命令模式。&lt;/p&gt;
&lt;p&gt;底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。&lt;/p&gt;
&lt;p&gt;在底线命令模式中，基本的命令有（已经省略了冒号）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:w&lt;/code&gt; ：保存文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q&lt;/code&gt; ：退出 Vim 编辑器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt; ：保存文件并退出 Vim 编辑器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q!&lt;/code&gt; ：强制退出 Vim 编辑器，不保存修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按 ESC 键可随时退出底线命令模式。&lt;/p&gt;
&lt;p&gt;简单的说，我们可以将这三个模式想成底下的图标来表示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../_resources/vim-vi-workmodel_52de27b995914cba974754e535802695.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第一部分一般模式可用的光标移动-复制粘贴-搜索替换等&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一部分一般模式可用的光标移动-复制粘贴-搜索替换等&#34;&gt;#&lt;/a&gt; 第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;移动光标的方法&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;h 或 向左箭头键 (←)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标向左移动一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;j 或 向下箭头键 (↓)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标向下移动一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;k 或 向上箭头键 (↑)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标向上移动一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;l 或 向右箭头键 (→)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标向右移动一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Ctrl] + [f]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;屏幕『向下』移动一页，相当于 [Page Down] 按键 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Ctrl] + [b]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Ctrl] + [d]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;屏幕『向下』移动半页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Ctrl] + [u]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;屏幕『向上』移动半页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;+&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动到非空格符的下一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动到非空格符的上一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n&amp;lt;space&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20&amp;lt;space&amp;gt; 则光标会向后面移动 20 个字符距离。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0 或功能键 [Home]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;这是数字『 0 』：移动到这一行的最前面字符处 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;$ 或功能键 [End]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;移动到这一行的最后面字符处 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;H&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动到这个屏幕的最上方那一行的第一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;M&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动到这个屏幕的中央那一行的第一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;L&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动到这个屏幕的最下方那一行的第一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;G&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;移动到这个档案的最后一行 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;nG&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行 (可配合 :set nu)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;gg&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;移动到这个档案的第一行，相当于 1G 啊！ (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n&amp;lt;Enter&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n 为数字。光标向下移动 n 行 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;** 搜索替换 **&lt;br&gt;
| /word | 向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用) |&lt;br&gt;
| ?word | 向光标之上寻找一个字符串名称为 word 的字符串。 |&lt;br&gt;
| n | 这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行？vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！ |&lt;br&gt;
| N | 这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。 |&lt;br&gt;
| 使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！ | |&lt;br&gt;
| :n1,n2s/word1/word2/g | n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则：&lt;br&gt;
『:100,200s/vbird/VBIRD/g』。(常用) |&lt;br&gt;
| :1,&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;或&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;s/word1/word2/g 或 :%s/word1/word2/g | 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用) | | :1,&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;or&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;or&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;或&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;s/word1/word2/gc 或 :% s/word1/word2/gc | 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用) |&lt;br&gt;
| 删除、复制与贴上 | |&lt;br&gt;
| x, X | 在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符 (相当于 [backspace] 亦即是退格键) (常用) |&lt;br&gt;
| nx | n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。 |&lt;br&gt;
| dd | 剪切游标所在的那一整行 (常用)，用 p/P 可以粘贴。 |&lt;br&gt;
| ndd | n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行 (常用)，用 p/P 可以粘贴。 |&lt;br&gt;
| d1G | 删除光标所在到第一行的所有数据 |&lt;br&gt;
| dG | 删除光标所在到最后一行的所有数据 |&lt;br&gt;
| d$ | 删除游标所在处，到该行的最后一个字符 |&lt;br&gt;
| d0 | 那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符 |&lt;br&gt;
| yy | 复制游标所在的那一行 (常用) |&lt;br&gt;
| nyy | n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行 (常用) |&lt;br&gt;
| y1G | 复制游标所在行到第一行的所有数据 |&lt;br&gt;
| yG | 复制游标所在行到最后一行的所有数据 |&lt;br&gt;
| y0 | 复制光标所在的那个字符到该行行首的所有数据 |&lt;br&gt;
| y$ | 复制光标所在的那个字符到该行行尾的所有数据 |&lt;br&gt;
| p, P | p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用) |&lt;br&gt;
| J | 将光标所在行与下一行的数据结合成同一行 |&lt;br&gt;
| c | 重复删除多个数据，例如向下删除 10 行，[10cj] |&lt;br&gt;
| u | 复原前一个动作。(常用) |&lt;br&gt;
| [Ctrl]+r | 重做上一个动作。(常用) |&lt;br&gt;
| . | 不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用) |&lt;br&gt;
| 如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数 (数字) 后，按下动作即可！ | |&lt;/p&gt;
&lt;h3 id=&#34;第二部分一般模式切换到编辑模式的可用的按钮说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二部分一般模式切换到编辑模式的可用的按钮说明&#34;&gt;#&lt;/a&gt; 第二部分：一般模式切换到编辑模式的可用的按钮说明&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;进入输入或取代的编辑模式&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;i, I&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)：&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a, A&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)：&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;o, O&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)：&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r, R&lt;/td&gt;
&lt;td&gt;进入取代模式 (Replace mode)：&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r 只会取代光标所在的那一个字符一次；R 会一直取代光标所在的文字，直到按下 ESC 为止；(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[Esc]&lt;/td&gt;
&lt;td&gt;退出编辑模式，回到一般模式中 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;第三部分一般模式切换到指令行模式的可用的按钮说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三部分一般模式切换到指令行模式的可用的按钮说明&#34;&gt;#&lt;/a&gt; 第三部分：一般模式切换到指令行模式的可用的按钮说明&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令行的储存、离开等指令&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:w&lt;/td&gt;
&lt;td&gt;将编辑的数据写入硬盘档案中 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:w!&lt;/td&gt;
&lt;td&gt;若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:q&lt;/td&gt;
&lt;td&gt;离开 vi (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:q!&lt;/td&gt;
&lt;td&gt;若曾修改过档案，又不想储存，使用！为强制离开不储存档案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:wq&lt;/td&gt;
&lt;td&gt;储存后离开，若为 :wq! 则为强制储存后离开 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZZ&lt;/td&gt;
&lt;td&gt;这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于 (保存并退出)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZQ&lt;/td&gt;
&lt;td&gt;不保存，强制退出。效果等同于 :q!。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:w [filename]&lt;/td&gt;
&lt;td&gt;将编辑的数据储存成另一个档案（类似另存新档）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:r [filename]&lt;/td&gt;
&lt;td&gt;在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:n1,n2 w [filename]&lt;/td&gt;
&lt;td&gt;将 n1 到 n2 的内容储存成 filename 这个档案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:! command&lt;/td&gt;
&lt;td&gt;暂时离开 vi 到指令行模式下执行 command 的显示结果！例如&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim 环境的变更&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:set nu&lt;/td&gt;
&lt;td&gt;显示行号，设定之后，会在每一行的前缀显示该行的行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:set nonu&lt;/td&gt;
&lt;td&gt;与 set nu 相反，为取消行号！&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;特别注意，在 vi/vim 中，数字是很有意义的！数字通常代表重复做几次的意思！ 也有可能是代表去到第几个什么什么的意思。&lt;/p&gt;
&lt;p&gt;举例来说，要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可。&lt;/p&gt;
</content>
        <category term="vim" />
        <updated>2024-02-06T09:40:01.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/02/06/%E5%B7%A5%E5%85%B7/git%E6%9A%82%E5%AD%98%E5%91%BD%E4%BB%A4/</id>
        <title>git暂存命令</title>
        <link rel="alternate" href="http://example.com/2024/02/06/%E5%B7%A5%E5%85%B7/git%E6%9A%82%E5%AD%98%E5%91%BD%E4%BB%A4/"/>
        <content type="html">&lt;h4 id=&#34;暂存命令的作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#暂存命令的作用&#34;&gt;#&lt;/a&gt; 暂存命令的作用&lt;/h4&gt;
&lt;p&gt;可以将 git 工作区的代码更改暂存，之后就可以执行 git pull、git merge 之类的命令&lt;/p&gt;
&lt;h4 id=&#34;暂存命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#暂存命令&#34;&gt;#&lt;/a&gt; 暂存命令&lt;/h4&gt;
&lt;figure class=&#34;highlight maxima&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs maxima&#34;&gt;git stash &lt;span class=&#34;hljs-built_in&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;暂存的备注&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直接执行 git stash 也可以达到暂存的目的，但是连续多次暂存后容易让人混淆哪次暂存了哪些代码&lt;/p&gt;
&lt;h4 id=&#34;查看暂存记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看暂存记录&#34;&gt;#&lt;/a&gt; 查看暂存记录&lt;/h4&gt;
&lt;figure class=&#34;highlight ebnf&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs ebnf&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;git stash list&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;取回暂存代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#取回暂存代码&#34;&gt;#&lt;/a&gt; 取回暂存代码&lt;/h4&gt;
&lt;figure class=&#34;highlight arcade&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs arcade&#34;&gt;git stash &lt;span class=&#34;hljs-built_in&#34;&gt;pop&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;取消【取消暂存代码】&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight pgsql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs pgsql&#34;&gt;git &lt;span class=&#34;hljs-keyword&#34;&gt;reset&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;--hard&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;撤回提交&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#撤回提交&#34;&gt;#&lt;/a&gt; 撤回提交&lt;/h2&gt;
&lt;figure class=&#34;highlight pgsql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs pgsql&#34;&gt;git &lt;span class=&#34;hljs-keyword&#34;&gt;reset&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;--soft HEAD&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="git" />
        <updated>2024-02-06T08:40:01.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/02/06/%E5%B7%A5%E5%85%B7/git%E6%9B%B4%E6%96%B0.gitignore%E6%96%87%E4%BB%B6%E5%90%8E%E4%B8%8D%E7%94%9F%E6%95%88/</id>
        <title>git更新.gitignore文件后不生效</title>
        <link rel="alternate" href="http://example.com/2023/02/06/%E5%B7%A5%E5%85%B7/git%E6%9B%B4%E6%96%B0.gitignore%E6%96%87%E4%BB%B6%E5%90%8E%E4%B8%8D%E7%94%9F%E6%95%88/"/>
        <content type="html">&lt;p&gt;项目更新了.gitignore 文件后直接提交不会生效，解决如下&lt;/p&gt;
&lt;figure class=&#34;highlight awk&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs awk&#34;&gt;git rm -r --cached . &lt;span class=&#34;hljs-regexp&#34;&gt;//&lt;/span&gt; 删除本地缓存&lt;br&gt;git add . &lt;span class=&#34;hljs-regexp&#34;&gt;//&lt;/span&gt; 添加要提交的文件&lt;br&gt;git commit -m &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;update .gitignore&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;//&lt;/span&gt; 更新本地的缓存&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="git" />
        <updated>2023-02-06T00:13:01.000Z</updated>
    </entry>
</feed>
